//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var Users = newUsersTable()

type usersTable struct {
	postgres.Table

	//Columns
	Userid   postgres.ColumnInteger
	Name     postgres.ColumnString
	Email    postgres.ColumnString
	Isactive postgres.ColumnBool

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type UsersTable struct {
	usersTable

	EXCLUDED usersTable
}

// AS creates new UsersTable with assigned alias
func (a *UsersTable) AS(alias string) *UsersTable {
	aliasTable := newUsersTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newUsersTable() *UsersTable {
	return &UsersTable{
		usersTable: newUsersTableImpl("public", "users"),
		EXCLUDED:   newUsersTableImpl("", "excluded"),
	}
}

func newUsersTableImpl(schemaName, tableName string) usersTable {
	var (
		UseridColumn   = postgres.IntegerColumn("userid")
		NameColumn     = postgres.StringColumn("name")
		EmailColumn    = postgres.StringColumn("email")
		IsactiveColumn = postgres.BoolColumn("isactive")
		allColumns     = postgres.ColumnList{UseridColumn, NameColumn, EmailColumn, IsactiveColumn}
		mutableColumns = postgres.ColumnList{NameColumn, EmailColumn, IsactiveColumn}
	)

	return usersTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		Userid:   UseridColumn,
		Name:     NameColumn,
		Email:    EmailColumn,
		Isactive: IsactiveColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
