//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var WebTokens = newWebTokensTable()

type webTokensTable struct {
	postgres.Table

	//Columns
	ID        postgres.ColumnInteger
	Userid    postgres.ColumnInteger
	Token     postgres.ColumnString
	CreatedAt postgres.ColumnTimestamp
	ExpiresAt postgres.ColumnTimestamp
	IsActive  postgres.ColumnBool

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type WebTokensTable struct {
	webTokensTable

	EXCLUDED webTokensTable
}

// AS creates new WebTokensTable with assigned alias
func (a *WebTokensTable) AS(alias string) *WebTokensTable {
	aliasTable := newWebTokensTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newWebTokensTable() *WebTokensTable {
	return &WebTokensTable{
		webTokensTable: newWebTokensTableImpl("public", "web_tokens"),
		EXCLUDED:       newWebTokensTableImpl("", "excluded"),
	}
}

func newWebTokensTableImpl(schemaName, tableName string) webTokensTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		UseridColumn    = postgres.IntegerColumn("userid")
		TokenColumn     = postgres.StringColumn("token")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		ExpiresAtColumn = postgres.TimestampColumn("expires_at")
		IsActiveColumn  = postgres.BoolColumn("is_active")
		allColumns      = postgres.ColumnList{IDColumn, UseridColumn, TokenColumn, CreatedAtColumn, ExpiresAtColumn, IsActiveColumn}
		mutableColumns  = postgres.ColumnList{UseridColumn, TokenColumn, CreatedAtColumn, ExpiresAtColumn, IsActiveColumn}
	)

	return webTokensTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ID:        IDColumn,
		Userid:    UseridColumn,
		Token:     TokenColumn,
		CreatedAt: CreatedAtColumn,
		ExpiresAt: ExpiresAtColumn,
		IsActive:  IsActiveColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
