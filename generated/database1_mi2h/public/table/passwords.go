//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var Passwords = newPasswordsTable()

type passwordsTable struct {
	postgres.Table

	//Columns
	ID        postgres.ColumnInteger
	Userid    postgres.ColumnInteger
	Password  postgres.ColumnString
	CreatedAt postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PasswordsTable struct {
	passwordsTable

	EXCLUDED passwordsTable
}

// AS creates new PasswordsTable with assigned alias
func (a *PasswordsTable) AS(alias string) *PasswordsTable {
	aliasTable := newPasswordsTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newPasswordsTable() *PasswordsTable {
	return &PasswordsTable{
		passwordsTable: newPasswordsTableImpl("public", "passwords"),
		EXCLUDED:       newPasswordsTableImpl("", "excluded"),
	}
}

func newPasswordsTableImpl(schemaName, tableName string) passwordsTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		UseridColumn    = postgres.IntegerColumn("userid")
		PasswordColumn  = postgres.StringColumn("password")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, UseridColumn, PasswordColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{UseridColumn, PasswordColumn, CreatedAtColumn}
	)

	return passwordsTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ID:        IDColumn,
		Userid:    UseridColumn,
		Password:  PasswordColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
